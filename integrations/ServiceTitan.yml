category: Field Service Management
configPages:
  - elements:
      - type: htmlElement
        value: <h3>Connect Your ServiceTitan Account</h3>
      - type: configVar
        value: ServiceTitan Connection
    name: Configuration
  - elements:
      - type: configVar
        value: Permit Needed Tag Id
    name: ServiceTitan Configuration
    tagline: ''
    userLevelConfigured: false
defaultInstanceProfile: Default Instance Profile
definitionVersion: 7
description: ''
documentation: ''
endpointType: flow_specific
flows:
  - description: ''
    endpointSecurityType: customer_optional
    isSynchronous: false
    name: Scheduled - Create Projects in PermitFlow
    steps:
      - action:
          key: schedule
          component:
            isPublic: true
            key: schedule-triggers
            version: LATEST
        description: ''
        inputs: {}
        isTrigger: true
        name: Scheduled - Create Project in PermitFlow Trigger
        schedule:
          meta:
            scheduleType: day
            timeZone: ''
          type: value
          value: 00 00 */1 * *
      - action:
          key: getCurrentDateTime
          component:
            isPublic: true
            key: datetime
            version: LATEST
        description: ''
        inputs: {}
        name: Get Current Date/Time
      - action:
          key: adjustDateTime
          component:
            isPublic: true
            key: datetime
            version: LATEST
        description: ''
        inputs:
          dateTimeInput:
            type: reference
            value: getCurrentDateTime.results
          daysInput:
            type: value
            value: '-1'
          hoursInput:
            type: value
            value: ''
          minutesInput:
            type: value
            value: ''
          secondsInput:
            type: value
            value: ''
        name: Get Previous Day
      - action:
          key: listJobs
          component:
            isPublic: true
            key: servicetitan
            version: LATEST
        description: ''
        inputs:
          connection:
            type: configVar
            value: ServiceTitan Connection
          customQueryParams:
            type: complex
            value:
              - name:
                  type: value
                  value: createdOnorAfter
                type: reference
                value: getPreviousDay.results
              - name:
                  type: value
                  value: tagTypeIds
                type: configVar
                value: Permit Needed Tag Id
          debugRequest:
            type: value
            value: 'false'
          fetchAll:
            type: value
            value: 'true'
          includeTotal:
            type: value
            value: 'false'
          page:
            type: value
            value: ''
          pageSize:
            type: value
            value: ''
          sort:
            type: value
            value: ''
        name: List Jobs Created After Previous Sync
      - action:
          key: loopOverItems
          component:
            isPublic: true
            key: loop
            version: LATEST
        description: ''
        inputs:
          items:
            type: reference
            value: listJobsCreatedAfterPreviousSync.results.data
        name: Loop Over Jobs
        steps:
          - action:
              key: getProject
              component:
                isPublic: false
                key: demoComponent
                version: LATEST
            description: ''
            inputs:
              connection:
                type: configVar
                value: ''
              pk:
                type: reference
                value: loopOverJobs.currentItem.id
            name: Check if Project Exists
          - action:
              key: branchOnExpression
              component:
                isPublic: true
                key: branch
                version: LATEST
            branches:
              - name: Project Does Not Exist
                steps:
                  - action:
                      key: createProject
                      component:
                        isPublic: false
                        key: demoComponent
                        version: LATEST
                    description: ''
                    inputs:
                      connection:
                        type: configVar
                        value: ''
                      customerId:
                        type: reference
                        value: loopOverJobs.currentItem.customerId
                      locationId:
                        type: reference
                        value: loopOverJobs.currentItem.locationId
                      priority:
                        type: reference
                        value: loopOverJobs.currentItem.priority
                      status:
                        type: reference
                        value: loopOverJobs.currentItem.jobStatus
                      summary:
                        type: reference
                        value: loopOverJobs.currentItem.summary
                      tagTypeId:
                        type: reference
                        value: loopOverJobs.currentItem.tagTypeIds
                    name: Create Project
              - name: Else
                steps: []
            description: ''
            inputs:
              conditions:
                type: complex
                value:
                  - name: Project Does Not Exist
                    type: complex
                    value:
                      - and
                      - - exists
                        - name: ''
                          type: reference
                          value: checkIfProjectExists.results.error
            name: Branch on Project Existence in PermitFlow
  - description: ''
    endpointSecurityType: customer_optional
    isSynchronous: false
    name: Real Time - Create New Project in PermitFlow
    steps:
      - action:
          key: webhook
          component:
            isPublic: true
            key: webhook-triggers
            version: LATEST
        description: ''
        inputs: {}
        isTrigger: true
        name: Create New PermitFlow Project Trigger
      - action:
          key: getJob
          component:
            isPublic: true
            key: servicetitan
            version: LATEST
        description: ''
        inputs:
          connection:
            type: configVar
            value: ServiceTitan Connection
          debugRequest:
            type: value
            value: 'false'
          externalDataApplicationGuid:
            type: value
            value: ''
          jobId:
            type: reference
            value: createNewPermitflowProjectTrigger.results.body.data.job_id
        name: Get Job
      - action:
          key: branchOnExpression
          component:
            isPublic: true
            key: branch
            version: LATEST
        branches:
          - name: Is Tag "Permit Needed"
            steps:
              - action:
                  key: createProject
                  component:
                    isPublic: false
                    key: demoComponent
                    version: LATEST
                description: ''
                inputs:
                  connection:
                    type: configVar
                    value: ''
                  customerId:
                    type: reference
                    value: getJob.results.customerId
                  locationId:
                    type: reference
                    value: getJob.results.locationId
                  priority:
                    type: reference
                    value: getJob.results.priority
                  status:
                    type: reference
                    value: getJob.results.jobStatus
                  summary:
                    type: reference
                    value: getJob.results.summary
                  tagTypeId:
                    type: reference
                    value: getJob.results.tagTypeIds
                name: Create Project
          - name: Else
            steps: []
        description: ''
        inputs:
          conditions:
            type: complex
            value:
              - name: Is Tag "Permit Needed"
                type: complex
                value:
                  - and
                  - - in
                    - name: ''
                      type: configVar
                      value: Permit Needed Tag Id
                    - name: ''
                      type: reference
                      value: getJob.results.tagTypeIds
        name: Branch on Tag Type
  - description: ''
    endpointSecurityType: customer_optional
    isSynchronous: false
    name: Update History in ServiceTitan
    steps:
      - action:
          key: permitFlowTrigger
          component:
            isPublic: false
            key: demoComponent
            version: LATEST
        description: ''
        inputs: {}
        isTrigger: true
        name: Project Status Change Trigger
        schedule:
          meta:
            scheduleType: none
          type: value
          value: ''
      - action:
          key: branchOnExpression
          component:
            isPublic: true
            key: branch
            version: LATEST
        branches:
          - name: Is Status Completed?
            steps:
              - action:
                  key: actions
                  component:
                    isPublic: true
                    key: result-placeholder
                    version: LATEST
                description: ''
                inputs:
                  code:
                    type: value
                    value: |-
                      {
                          text: "Permit Issued",
                      }
                name: Mock Example Text
              - action:
                  key: httpPost
                  component:
                    isPublic: true
                    key: http
                    version: LATEST
                description: ''
                inputs:
                  connection:
                    type: configVar
                    value: ''
                  data:
                    type: reference
                    value: mockExampleText.results
                  debugRequest:
                    type: value
                    value: 'false'
                  headers:
                    type: complex
                    value: []
                  ignoreSslErrors:
                    type: value
                    value: 'false'
                  includeFullResponse:
                    type: value
                    value: 'false'
                  maxRetries:
                    type: value
                    value: '0'
                  queryParams:
                    type: complex
                    value: []
                  responseType:
                    type: value
                    value: json
                  retryDelayMS:
                    type: value
                    value: '0'
                  retryOnAllErrors:
                    type: value
                    value: 'false'
                  timeout:
                    type: value
                    value: ''
                  url:
                    type: template
                    value: >-
                      https://api-integration.servicetitan.io/jpm/v2/tenant/{tenant}/jobs/{{$projectStatusChangeTrigger.results.body.data.job_id}}/notes
                  useExponentialBackoff:
                    type: value
                    value: 'false'
                name: Create Note on Job in ServiceTitan
          - name: Else
            steps: []
        description: ''
        inputs:
          conditions:
            type: complex
            value:
              - name: Is Status Completed?
                type: complex
                value:
                  - and
                  - - equal
                    - name: ''
                      type: reference
                      value: projectStatusChangeTrigger.results.body.data.status
                    - name: ''
                      type: value
                      value: Completed
        name: Branch on Status
  - description: ''
    endpointSecurityType: customer_optional
    isSynchronous: false
    name: On Deploy - Create Historical Projects in PermitFlow
    steps:
      - action:
          key: instanceDeploy
          component:
            isPublic: true
            key: management-triggers
            version: LATEST
        description: ''
        inputs: {}
        isTrigger: true
        name: On Deploy - Create Historical Projects in PermitFlow Trigger
      - action:
          key: getCurrentDateTime
          component:
            isPublic: true
            key: datetime
            version: LATEST
        description: ''
        inputs: {}
        name: Get Current Date/Time
      - action:
          key: listJobs
          component:
            isPublic: true
            key: servicetitan
            version: LATEST
        description: ''
        inputs:
          connection:
            type: configVar
            value: ServiceTitan Connection
          customQueryParams:
            type: complex
            value:
              - name:
                  type: value
                  value: createdBefore
                type: reference
                value: getCurrentDateTime.results
              - name:
                  type: value
                  value: tagTypeIds
                type: configVar
                value: Permit Needed Tag Id
          debugRequest:
            type: value
            value: 'false'
          fetchAll:
            type: value
            value: 'true'
          includeTotal:
            type: value
            value: 'false'
          page:
            type: value
            value: ''
          pageSize:
            type: value
            value: ''
          sort:
            type: value
            value: ''
        name: List Jobs Created Before Integration Enabled
      - action:
          key: loopOverItems
          component:
            isPublic: true
            key: loop
            version: LATEST
        description: ''
        inputs:
          items:
            type: reference
            value: listJobsCreatedBeforeIntegrationEnabled.results.data
        name: Loop Over Jobs
        steps:
          - action:
              key: getProject
              component:
                isPublic: false
                key: demoComponent
                version: LATEST
            description: ''
            inputs:
              connection:
                type: configVar
                value: ''
              pk:
                type: reference
                value: loopOverJobs.currentItem.id
            name: Check if Project Exists
          - action:
              key: branchOnExpression
              component:
                isPublic: true
                key: branch
                version: LATEST
            branches:
              - name: Project Does Not Exist
                steps:
                  - action:
                      key: createProject
                      component:
                        isPublic: false
                        key: demoComponent
                        version: LATEST
                    description: ''
                    inputs:
                      connection:
                        type: configVar
                        value: ''
                      customerId:
                        type: reference
                        value: loopOverJobs.currentItem.customerId
                      locationId:
                        type: reference
                        value: loopOverJobs.currentItem.locationId
                      priority:
                        type: reference
                        value: loopOverJobs.currentItem.priority
                      status:
                        type: reference
                        value: loopOverJobs.currentItem.jobStatus
                      summary:
                        type: reference
                        value: loopOverJobs.currentItem.summary
                      tagTypeId:
                        type: reference
                        value: loopOverJobs.currentItem.tagTypeIds
                    name: Create Project
              - name: Else
                steps: []
            description: ''
            inputs:
              conditions:
                type: complex
                value:
                  - name: Project Does Not Exist
                    type: complex
                    value:
                      - and
                      - - exists
                        - name: ''
                          type: reference
                          value: checkIfProjectExists.results.error
            name: Branch on Project Existence in PermitFlow
name: ServiceTitan
requiredConfigVars:
  - connection:
      key: serviceTitanConnection
      component:
        isPublic: true
        key: servicetitan
        version: LATEST
    dataType: connection
    inputs:
      applicationKey:
        meta:
          orgOnly: true
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: false
        type: value
        value: ak1.4adsy4lkty0b3cqh48zl5z3d7
      clientId:
        meta:
          orgOnly: true
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: false
        type: value
        value: cid.dfl2ffmrc01hzh4o98q0y9fir
      clientSecret:
        meta:
          orgOnly: true
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: false
        type: value
        value: cs1.5xrqiyi7kervc2ldd5lxda2ppdyhs3iy1461qr45gt1yl8k4wl
      environment:
        meta:
          orgOnly: true
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: false
        type: value
        value: integration
      tenant:
        meta:
          orgOnly: true
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: false
        type: value
        value: '1097266986'
      tokenUrl:
        meta:
          orgOnly: true
          visibleToCustomerDeployer: false
          visibleToOrgDeployer: false
        type: value
        value: 'https://auth-integration.servicetitan.io/connect/token '
    key: ServiceTitan Connection
    onPremiseConnectionConfig: disallowed
    orgOnly: false
  - dataType: string
    defaultValue: abc123
    description: Id of the tag "Permit Needed"
    key: Permit Needed Tag Id
    orgOnly: false
