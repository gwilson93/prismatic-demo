"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isConnectionReferenceConfigVar = exports.isConnectionDefinitionConfigVar = exports.isDataSourceReferenceConfigVar = exports.isDataSourceDefinitionConfigVar = exports.isScheduleConfigVar = exports.isCodeConfigVar = void 0;
const _1 = require(".");
const isCodeConfigVar = (cv) => "dataType" in cv && cv.dataType === "code";
exports.isCodeConfigVar = isCodeConfigVar;
const isScheduleConfigVar = (cv) => "dataType" in cv && cv.dataType === "schedule";
exports.isScheduleConfigVar = isScheduleConfigVar;
const isDataSourceDefinitionConfigVar = (cv) => "dataSourceType" in cv && "perform" in cv && typeof cv.perform === "function";
exports.isDataSourceDefinitionConfigVar = isDataSourceDefinitionConfigVar;
const isDataSourceReferenceConfigVar = (
// FIXME: Module augmetation causes this to produce a compile error while
// running `tsd`. I'm pretty uncertain how this happens but leaving as
// `unkonwn` is fine for now.
cv) => typeof cv === "object" &&
    cv !== null &&
    "dataSource" in cv &&
    (0, _1.isComponentReference)(cv.dataSource);
exports.isDataSourceReferenceConfigVar = isDataSourceReferenceConfigVar;
const isConnectionDefinitionConfigVar = (cv) => "dataType" in cv && cv.dataType === "connection" && "inputs" in cv;
exports.isConnectionDefinitionConfigVar = isConnectionDefinitionConfigVar;
const isConnectionReferenceConfigVar = (
// FIXME: Module augmetation causes this to produce a compile error while
// running `tsd`. I'm pretty uncertain how this happens but leaving as
// `unkonwn` is fine for now.
cv) => typeof cv === "object" &&
    cv !== null &&
    "connection" in cv &&
    (0, _1.isComponentReference)(cv.connection);
exports.isConnectionReferenceConfigVar = isConnectionReferenceConfigVar;
